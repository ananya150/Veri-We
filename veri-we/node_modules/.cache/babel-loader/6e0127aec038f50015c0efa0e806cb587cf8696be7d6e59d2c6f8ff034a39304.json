{"ast":null,"code":"var _jsxFileName = \"/Users/devaanshpatel02/Desktop/trial/ethsf2022-main/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { WorldIDWidget } from '@worldcoin/id';\nimport { defaultAbiCoder as ABI } from 'ethers/lib/utils';\nimport { useState } from 'react';\nimport verify from './verify.png';\nimport MainABI from './Main.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [wallet_status, set_wallet_status] = useState('Connect Wallet');\n  const [account, set_account] = useState('');\n  const [chain_id, set_chain_id] = useState('');\n  const [network_status, set_network_status] = useState('Not Connected');\n  const {\n    ethereum\n  } = window;\n  const [verification, setVerification] = useState();\n  const networks = {\n    '0x1': 'ETH Mainnet',\n    '0x89': 'Polygon',\n    '0x3': 'Ropsten',\n    '0x2a': 'Kovan',\n    '0x4': 'Rinkeby',\n    '0x5': 'Goerli',\n    '0x13881': 'Mumbai'\n  };\n  function handleVerification(verification) {\n    console.log(verification);\n    let {\n      merkle_root,\n      nullifier_hash,\n      proof\n    } = verification;\n    let depackedProof = ABI.decode(['uint256[8]'], proof)[0];\n    console.log(depackedProof);\n    setVerification({\n      merkle_root,\n      nullifier_hash,\n      depackedProof\n    });\n  }\n  async function handleConnect(new_account) {\n    set_account(new_account);\n    document.getElementById('input_address').value = new_account;\n    set_wallet_status('Connected as ' + new_account.substring(0, 6) + '...' + new_account.slice(-4));\n    let connected_chain = await ethereum.request({\n      method: 'eth_chainId'\n    });\n    set_chain_id(connected_chain);\n    set_network_status('Connected to: ' + (networks[connected_chain] || connected_chain));\n    ethereum.on('chainChanged', _chainId => window.location.reload());\n    console.log(connected_chain);\n  }\n  async function connectWallet() {\n    try {\n      let accounts = await ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      handleConnect(accounts[0]);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  async function handleQuery() {\n    let query_address = document.getElementById('input_address').value;\n    fetch(`https://api.covalenthq.com/v1/1/address/${query_address}/balances_v2/?quote-currency=USD&format=JSON&nft=true&no-nft-fetch=false&key=ckey_79c997c7e8084e0f9df0af9824c`).then(response => response.json()).then(data => {\n      console.log(data.data.items);\n    });\n  }\n  async function handleTransaction() {\n    // eslint-disable-next-line no-undef\n    let metamask_web3 = new Web3(window.ethereum);\n    let metamask_contract = new metamask_web3.eth.Contract(MainABI, '0xf24D9124C6005719F6a04CcB7B47e814F27A100c');\n    let {\n      merkle_root,\n      nullifier_hash,\n      depackedProof\n    } = verification;\n    await metamask_contract.methods.verifyAndExecute(account, merkle_root, nullifier_hash, depackedProof, document.getElementById('input_address')).send({\n      from: account,\n      gas: 3000000\n    });\n  }\n  window.onload = async function () {\n    if (typeof window.ethereum !== 'undefined') {\n      let accounts = await ethereum.request({\n        method: 'eth_accounts'\n      });\n      if (accounts.length) {\n        handleConnect(accounts[0]);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"connect_wallet\",\n      onClick: connectWallet,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"connect_wallet_text\",\n        children: wallet_status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input_address\",\n          placeholder: \"Enter an address...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"address_search\",\n          onClick: handleQuery,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"world_id_widget_wrapper\",\n        children: /*#__PURE__*/_jsxDEV(WorldIDWidget, {\n          actionId: \"wid_55ce0dca9e4e68affde2ca10b426cb19\",\n          signal: \"sign-in\",\n          onSuccess: verificationResponse => handleVerification(verificationResponse),\n          onError: error => console.error(error),\n          debug: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"verify_button\",\n        onClick: handleTransaction,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"verify_image\",\n          src: verify\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 6\n        }, this), \"Verify ENS\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"UZmKkQROSynxQDwlkBCTjeIAFXk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["WorldIDWidget","defaultAbiCoder","ABI","useState","verify","MainABI","App","wallet_status","set_wallet_status","account","set_account","chain_id","set_chain_id","network_status","set_network_status","ethereum","window","verification","setVerification","networks","handleVerification","console","log","merkle_root","nullifier_hash","proof","depackedProof","decode","handleConnect","new_account","document","getElementById","value","substring","slice","connected_chain","request","method","on","_chainId","location","reload","connectWallet","accounts","error","handleQuery","query_address","fetch","then","response","json","data","items","handleTransaction","metamask_web3","Web3","metamask_contract","eth","Contract","methods","verifyAndExecute","send","from","gas","onload","length","verificationResponse"],"sources":["/Users/devaanshpatel02/Desktop/trial/ethsf2022-main/src/App.js"],"sourcesContent":["import './App.css';\nimport { WorldIDWidget } from '@worldcoin/id';\nimport { defaultAbiCoder as ABI } from 'ethers/lib/utils';\nimport { useState } from 'react';\nimport verify from './verify.png';\nimport MainABI from './Main.json';\n\nfunction App() {\n\tconst [wallet_status, set_wallet_status] = useState('Connect Wallet');\n\tconst [account, set_account] = useState('');\n\tconst [chain_id, set_chain_id] = useState('');\n\tconst [network_status, set_network_status] = useState('Not Connected');\n\tconst { ethereum } = window;\n\tconst [verification, setVerification] = useState();\n\n\tconst networks = {\n\t\t'0x1': 'ETH Mainnet',\n\t\t'0x89': 'Polygon',\n\t\t'0x3': 'Ropsten',\n\t\t'0x2a': 'Kovan',\n\t\t'0x4': 'Rinkeby',\n\t\t'0x5': 'Goerli',\n\t\t'0x13881': 'Mumbai',\n\t};\n\n\tfunction handleVerification(verification) {\n\t\tconsole.log(verification);\n\n\t\tlet { merkle_root, nullifier_hash, proof } = verification;\n\t\tlet depackedProof = ABI.decode(['uint256[8]'], proof)[0];\n\t\tconsole.log(depackedProof);\n\t\tsetVerification({ merkle_root, nullifier_hash, depackedProof });\n\t}\n\n\tasync function handleConnect(new_account) {\n\t\tset_account(new_account);\n\t\tdocument.getElementById('input_address').value = new_account;\n\t\tset_wallet_status(\n\t\t\t'Connected as ' +\n\t\t\t\tnew_account.substring(0, 6) +\n\t\t\t\t'...' +\n\t\t\t\tnew_account.slice(-4)\n\t\t);\n\t\tlet connected_chain = await ethereum.request({ method: 'eth_chainId' });\n\t\tset_chain_id(connected_chain);\n\t\tset_network_status(\n\t\t\t'Connected to: ' + (networks[connected_chain] || connected_chain)\n\t\t);\n\t\tethereum.on('chainChanged', (_chainId) => window.location.reload());\n\t\tconsole.log(connected_chain);\n\t}\n\n\tasync function connectWallet() {\n\t\ttry {\n\t\t\tlet accounts = await ethereum.request({ method: 'eth_requestAccounts' });\n\t\t\thandleConnect(accounts[0]);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n\n\tasync function handleQuery() {\n\t\tlet query_address = document.getElementById('input_address').value;\n\t\tfetch(\n\t\t\t`https://api.covalenthq.com/v1/1/address/${query_address}/balances_v2/?quote-currency=USD&format=JSON&nft=true&no-nft-fetch=false&key=ckey_79c997c7e8084e0f9df0af9824c`\n\t\t)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(data.data.items);\n\t\t\t});\n\t}\n\n\tasync function handleTransaction() {\n\t\t// eslint-disable-next-line no-undef\n\t\tlet metamask_web3 = new Web3(window.ethereum);\n\t\tlet metamask_contract = new metamask_web3.eth.Contract(\n\t\t\tMainABI,\n\t\t\t'0xf24D9124C6005719F6a04CcB7B47e814F27A100c'\n\t\t);\n\n\t\tlet { merkle_root, nullifier_hash, depackedProof } = verification;\n\t\tawait metamask_contract.methods\n\t\t\t.verifyAndExecute(\n\t\t\t\taccount,\n\t\t\t\tmerkle_root,\n\t\t\t\tnullifier_hash,\n\t\t\t\tdepackedProof,\n\t\t\t\tdocument.getElementById('input_address')\n\t\t\t)\n\t\t\t.send({ from: account, gas: 3000000 });\n\t}\n\n\twindow.onload = async function () {\n\t\tif (typeof window.ethereum !== 'undefined') {\n\t\t\tlet accounts = await ethereum.request({ method: 'eth_accounts' });\n\t\t\tif (accounts.length) {\n\t\t\t\thandleConnect(accounts[0]);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div id='connect_wallet' onClick={connectWallet}>\n\t\t\t\t<span id='connect_wallet_text'>{wallet_status}</span>\n\t\t\t</div>\n\n\t\t\t<div id='container'>\n\t\t\t\t<div id='search'>\n\t\t\t\t\t<input id='input_address' placeholder='Enter an address...'></input>\n\t\t\t\t\t<button id='address_search' onClick={handleQuery}>\n\t\t\t\t\t\tSearch\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div id='world_id_widget_wrapper'>\n\t\t\t\t\t<WorldIDWidget\n\t\t\t\t\t\tactionId='wid_55ce0dca9e4e68affde2ca10b426cb19'\n\t\t\t\t\t\tsignal='sign-in'\n\t\t\t\t\t\tonSuccess={(verificationResponse) =>\n\t\t\t\t\t\t\thandleVerification(verificationResponse)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonError={(error) => console.error(error)}\n\t\t\t\t\t\tdebug={true}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button id='verify_button' onClick={handleTransaction}>\n\t\t\t\t\t<img id='verify_image' src={verify} />\n\t\t\t\t\tVerify ENS\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}